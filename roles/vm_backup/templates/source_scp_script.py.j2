#!/usr/bin/env python
"""
Title:   {{ item.value.name }} scp backup script
Author:  canadensys
Date:    dec 2016
"""

import sys,os
import subprocess
from subprocess import Popen, PIPE
import tarfile
import time

#
# How it will work
# scp files from vm's in tmp
# check if md5sum is equal
# transfert to dropbox
# remove previous files if too old (more than 3 days)
# 

current_date  = (time.strftime("%d-%m-%Y"))
logfile = '{{ bk_vm_log_dir }}/{{Â item.value.name }}.log'
#--- Variables for tests ---#
space_default_needed = 1000000

## Script
#--- MAIN ---# 
def main():
    log = open(logfile, 'w')
    if test_available_space  > space_default_needed:
        log.write('#####\n Start of '+current_date+' Daily Backup\n\n')
        scp(log)
        log.write('##### End of '+current_date+' Daily Backup\n\n')
    else:
        log.write('!!!!!\n WARNING NOT ENOUGHT SPACE for '+current_date+' Daily Backup\n!!!!!\n')
    log.close()
#--- Test available space ---#
def test_available_space():
    size = os.statvfs(main_bk_dir)
    available_space=(size.f_bavail * size.f_frsize) / 1024
    return available_space
#--- scp ---#
def scp(log):
    port            = ""
{% if item.value.port is defined %}
    port            = " -P {{ item.value.port }} "
{% endif %}
    identity_file   = ' -i {{ bk_vm_priv_key_file }} '
    user            = '{{ item.value.user }}'
    server          = '{{ item.value.server }}'
    localpath       = '{{ bk_vm_bk_dir }}/{{ item.value.name }}'
    remote_path     = 'backups/*.*'
    hostname        = ' '+user+"@"+server+':'
    cmd             = 'sftp '
    s = cmd+' '+identity_file+' '+port+' '+hostname+'"'+remote_path+'"'+' "'+localpath+'"'
    
    log.write('#####\n command line executed is : >'+s+'<\n\n')
    os.system(s)

if __name__ == '__main__':
    main()
