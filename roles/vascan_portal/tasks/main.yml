---
# Install MySQL Database
- name: Create databases in MySql
  become: true
  mysql_db:
    name    : '{{ item.value.db_name }}'
    state   : present
  with_dict: '{{ db_dict }}'

- name: Create database users
  become: true
  mysql_user:
    name  : '{{ item.value.db_user }}'
    password: '{{ item.value.db_password }}'
    priv  : '{{ item.value.db_name }}.*:ALL'
    host  : '{{ item.value.db_host }}'
    state : present
  with_dict: '{{ db_dict }}'

- name: Copy db files
  become: true
  copy:
    src     : '{{ item.value.db_src }}'
    dest    : '{{ item.value.db_dest }}'
  with_dict: '{{ db_dict }}'

- name: Restore MySQL Database from file
  become: true
  mysql_db:
    name    : '{{ item.value.db_name }}'
    state   : import
    target  : '{{ item.value.db_zip }}'
  with_dict: '{{ db_dict }}'
  notify: restart mysql

- name: Create application directory structure
  become: true
  file: 
    path: "{{ tomcat_webapps }}"
    state: directory
    owner: '{{ tomcat_user }}'

- name: Install Maven
  become: true
  apt:
    pkg: maven
    state: present
    update_cache    : yes
  
- name: Clone Vascan and dependencies (canadensys-data-access)
  git:
    repo: '{{ item.value.repo }}'
    dest: '{{ item.value.checkout_dir }}'
    version: '{{ item.value.version }}'
    depth: 1
  with_dict: '{{ source_dict }}'

- name: Build canadensys-data-access locally
  command: mvn install
  args:
    chdir: '{{ source_dict.data_access.checkout_dir }}'

- name: Create Vascan config
  template:
     src: vascan-config.properties.j2
     dest: '{{ source_dict.vascan.checkout_dir }}/config/production/vascan-config.properties'

- name: Build Vascan (without running tests)
  shell: ./gradlew clean buildProductionQuiet -x test
  args:
    chdir: '{{ source_dict.vascan.checkout_dir }}'

- name: Install unzip
  become: true
  apt:
    pkg: unzip
    state: present
    update_cache    : yes

- name: Download and extract MySql Java Connector for ElasticSearch River plugin
  unarchive:
    src: '{{ mysql_java_connector_url }}'
    dest: '{{ tmp_dest }}'
    remote_src: yes

- name: Move MySql Java Connector for ElasticSearch River plugin
  copy:
    remote_src: yes
    src     : '{{ tmp_dest }}/{{ mysql_java_connector_version }}/{{ mysql_java_connector_jar }}'
    dest    : '{{ elasticsearch_plugindir }}/jdbc-river'
    owner   : '{{ elasticsearch_user }}'
    group   : '{{ elasticsearch_user }}'

# using curl since posting a file is not supported by the uri module
- name: Create ElasticSearch Index
  shell: 'curl  -XPOST "{{ elastic_search.host }}:{{ elastic_search.port }}/vascan" \
                -d @{{ elastic_search.create_index }}'
  warn: False

- name: Prepare ElasticSearch Rivers files
  template:
     src: elastic_search_river.json.j2
     dest: '{{ tmp_dest }}/es_river_{{ item.value.type }}.json'
  with_dict: '{{ elastic_search_rivers }}'

# using curl since posting a file is not supported by the uri module
- name: Create ElasticSearch Rivers
  shell: 'curl  -XPOST "{{ elastic_search.host }}:{{ elastic_search.port }}/_river/vascan_{{ item.value.type }}_jdbc_river/_meta" \
                -d @{{ tmp_dest }}/es_river_{{ item.value.type }}.json'
  warn: False
  with_dict: '{{ elastic_search_rivers }}'

- name: Move Vascan WAR to Tomcat
  become: true
  copy:
    remote_src: yes
    src     : '{{ source_dict.vascan.checkout_dir }}/build/libs/vascan-{{ vascan_version }}.war'
    dest    : '{{ tomcat_webapps }}/vascan.war'
    owner   : '{{ tomcat_user }}'
  notify: restart tomcat8
