---
- name: Remove user if user_remove is true
  become: true
  user:
    name    : '{{ user_name | default("name") }}'
    state   : absent
    remove  : yes
    force   : yes
  when: user_remove
  tags:
    - user
    
- name : create group user
  become: true
  group:
    name: '{{ user_group | default("name") }}'
  tags:
    - user
    
- name: Add default user
  become: true
  user:
    name    : '{{ user_name | default("name") }}'
    group   : '{{ user_group | default("name") }}'
    create_home: '{{ user_c_home | default("yes") }}'
    shell   : '/bin/false'
    state   : present
  tags:
    - user
    

- name: Set user home if defined
  become: true
  user:
    name    : '{{ user_name | default("name") }}'
    home    : '{{ user_home | default("/home/name/") }}'
  when: (user_home is defined)
  tags:
    - user
    

- name: Set user password if defined
  become: true
  user:
    name    : '{{ user_name | default("name") }}'
    password: '{{ user_password | default("name_password") }}'
  when: (user_password is defined)
  tags:
    - user
    

- name: Add .ssh directory for user with home
  become: true
  file:
    path    : '{{ item }}'
    state   : directory
    owner   : '{{ user_name }}'
    group   : '{{ user_group | default(grp) }}'
  with_items:
    - '{{ user_home | default("/home/name/") }}/.ssh'
    - '{{ user_web | default("/home/name/") }}'
  when: (user_home is defined)
  tags:
    - user
    

#- name: Add public key for user
#  command: echo '{{ user_pub_key }}' | tee ~/.ssh/authorized_keys
#  when: (user_pub_key is defined)

#
# OLD
#
#- name: Change root password
#  user: name=root password="{{ root_password }}"
#- name: Add deploy user
#  user: name={{ deploy_user_name }} shell=/bin/bash append=yes password="{{ deploy_password }}"
#- name: Add users
#  user: name={{ item.value.name }} shell=/bin/bash append=yes password="{{ item.value.password }}"
#  with_dict: "{{ users }}"
# other option could be made during vagrant
#- name: Add authorized keys for deploy user
#  authorized_key: user={{ item.value.name }} key="{{ lookup('file', lookup('env','HOME') + '{{ item.value.keys }}') }}"
#  become: yes
#  with_dict: "{{ users }}"
#
#- name: Add canadensys user to sudoers
#  lineinfile: dest=/etc/sudoers
#              regexp="{{ deploy_user_name }} ALL"
#              line="{{ deploy_user_name }} ALL=(ALL) ALL"
#              state=present
